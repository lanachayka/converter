{"version":3,"sources":["components/Converting/Converting.module.css","components/Menu/Menu.module.css","components/MenuLink/MenuLink.module.css","components/DropDownList/DropDownList.module.css","components/MenuLink/MenuLink.tsx","components/Menu/Menu.tsx","functions/lengthFunctions.ts","components/DropDownList/DropDownList.tsx","components/Converting/Converting.tsx","components/Length/Length.tsx","functions/weightFunctions.ts","components/Weight/Weight.tsx","functions/temperatureFunctions.ts","components/Temperature/Temperature.tsx","App.tsx","index.tsx"],"names":["module","exports","MenuLink","props","match","useMatch","path","useResolvedPath","way","pathname","end","to","className","st","active","link","name","Menu","title","navigation","line","convertLength","from","value","type","m","parseInt","toString","toFixed","fromMeters","km","fromKilometer","f","fromFeet","y","fromYards","mi","fromMiles","lengthValues","DropDownList","select","onChange","event","onSelectChange","target","values","map","index","Converting","useState","units","convertFrom","setConvertFrom","convertTo","setConvertTo","enteredValue","setEnteredValue","result","setResult","wrapper","inputBlock","placeholder","input","equal","defaultValue","btn","onClick","convertingMethod","Length","convertWeight","kg","fromKilograms","g","fromGrams","p","fromPounds","s","fromStones","weightValues","Weight","convertTemperature","fromFahrenheit","k","fromKelvin","c","fromCelsius","temperatureValues","Temperature","App","routes","element","children","useRoutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcde33e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Converting_wrapper__1OcP1\",\"select\":\"Converting_select__RPEII\",\"inputBlock\":\"Converting_inputBlock__2SbUA\",\"input\":\"Converting_input__Q8bcL\",\"equal\":\"Converting_equal__3WTEK\",\"btn\":\"Converting_btn__3krlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Menu_title__2baXQ\",\"line\":\"Menu_line__2oFyS\",\"navigation\":\"Menu_navigation__3IZm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MenuLink_link__2QRhL\",\"active\":\"MenuLink_active__2Jqk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"DropDownList_select__3UWvm\"};","import React from 'react';\nimport st from './MenuLink.module.css';\nimport {NavLink, useMatch, useResolvedPath} from 'react-router-dom';\n\ninterface MenuLinkProps {\n    way: string,\n    name: string\n}\n\nconst MenuLink: React.FC<MenuLinkProps> = (props) => {\n    const match = useMatch({path: useResolvedPath(props.way).pathname, end:true});\n    return <NavLink\n        to={props.way}\n        className={match ? st.active: st.link}>\n        {props.name}\n    </NavLink>\n}\n\nexport default MenuLink;","import React from 'react';\nimport st from './Menu.module.css'\nimport MenuLink from '../MenuLink/MenuLink';\n\nconst Menu: React.FC = () => {\n    return (\n        <div>\n            <h1 className={st.title}>Choose what you want to convert:</h1>\n            <nav className={st.navigation}>\n                <MenuLink way=\"/length\" name=\"Length\" />\n                <MenuLink way=\"/weight\" name=\"Weight\" />\n                <MenuLink way=\"/temperature\" name=\"Temperature\" />\n            </nav>\n            <hr className={st.line}/>\n        </div>\n    );\n}\n\nexport default Menu;","const fromMeters = (type:string, value:string) => {\n    const m = parseInt(value);\n    switch (type) {\n        case 'kilometer' :\n            return (m/1000).toString();\n        case 'feet' :\n            return ((m*3.2808).toFixed(2)).toString();\n        case 'yards':\n            return ((m*1.0936)).toFixed(2).toString();\n        case 'miles' :\n            return ((m*0.00062137).toFixed(4)).toString();\n        default: return value;\n    }\n}\n\nconst fromKilometer = (type:string, value: string) => {\n    const km = parseInt(value);\n    switch (type) {\n        case 'meter' :\n            return (km*1000).toString();\n        case 'feet' :\n            return ((km*3280.8).toFixed(2)).toString();\n        case 'yards':\n            return ((km*1093.6)).toFixed(2).toString();\n        case 'miles' :\n            return ((km*0.62137).toFixed(2)).toString();\n        default: return value;\n    }\n}\n\nconst fromFeet = (type:string, value: string) => {\n    const f = parseInt(value);\n    switch (type) {\n        case 'meters' :\n            return ((f/3.2808).toFixed(2)).toString();\n        case 'kilometer' :\n            return ((f/3280.8).toFixed(4)).toString();\n        case 'yards':\n            return ((f*0.33333)).toFixed(2).toString();\n        case 'miles' :\n            return ((f*0.00018939).toFixed(4)).toString();\n        default: return value;\n    }\n}\n\nconst fromYards = (type:string, value: string) => {\n    const y = parseInt(value);\n    switch (type) {\n        case 'meters' :\n            return ((y/1.0936).toFixed(2)).toString();\n        case 'kilometer' :\n            return ((y/1093.6).toFixed(4)).toString();\n        case 'feet':\n            return (y*3).toString();\n        case 'miles' :\n            return ((y*0.00056818).toFixed(4)).toString();\n        default: return value;\n    }\n}\n\nconst fromMiles = (type:string, value: string) => {\n    const mi = parseInt(value);\n    switch (type) {\n        case 'meters' :\n            return ((mi/0.00062137).toFixed(4)).toString();\n        case 'kilometer' :\n            return ((mi/0.62137).toFixed(4)).toString();\n        case 'feet':\n            return (mi*5280).toString();\n        case 'yards' :\n            return (mi*1760).toString();\n        default: return value;\n    }\n}\n\nexport const convertLength = (from: string, to: string, value: string) => {\n    switch (from) {\n        case 'meters' :\n            return fromMeters(to, value);\n        case 'kilometer' :\n            return fromKilometer(to, value);\n        case 'feet' :\n            return fromFeet(to, value);\n        case 'yards' :\n            return fromYards(to, value);\n        case 'miles' :\n            return fromMiles(to, value);\n        default: return value;\n    }\n}\n\n\nexport const lengthValues: string[] = ['meters', 'kilometer', 'feet', 'yards', 'miles' ];","import React from \"react\";\nimport st from \"./DropDownList.module.css\"\n\ninterface DropDownListProps {\n    values: string[];\n    onSelectChange: (value: string) => void;\n}\n\nconst DropDownList: React.FC<DropDownListProps> = (props) => {\n\n    const changeValue = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        props.onSelectChange(event.target.value);\n    }\n    return <select className={st.select} onChange={changeValue}>\n        {props.values.map((value, index)=>(\n            <option key={index} value={value}>{value}</option>))}\n    </select>\n}\n\nexport default DropDownList;","import React, {useState} from 'react';\nimport st from './Converting.module.css'\nimport DropDownList from '../DropDownList/DropDownList'\n\ninterface ConvertingProps {\n    units: string[];\n    convertingMethod: (from:string, to:string, value: string)=>string;\n}\n\nconst Converting: React.FC<ConvertingProps> = (props) => {\n\n    const [convertFrom, setConvertFrom] = useState(props.units[0]);\n    const [convertTo, setConvertTo] = useState(props.units[0]);\n    const [enteredValue, setEnteredValue] = useState('');\n    const [result, setResult] = useState('');\n\n    const convert = () => {\n        setResult(props.convertingMethod(convertFrom, convertTo, enteredValue));\n    }\n\n    const onInputChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setEnteredValue(event.target.value);\n    }\n\n    return (<div className={st.wrapper}>\n            <div className={st.select}>\n                <div className={st.inputBlock}>\n                    <input placeholder=\"Enter a value\" className={st.input} onChange={onInputChange}/>\n                    <DropDownList onSelectChange={setConvertFrom} values={props.units}/>\n                </div>\n                <p className={st.equal}>=</p>\n                <div className={st.inputBlock}>\n                    <input className={st.input} defaultValue={result} />\n                    <DropDownList onSelectChange={setConvertTo} values={props.units}/>\n                </div>\n            </div>\n            <button className={st.btn} onClick={convert}>Сonvert</button>\n        </div>\n    )\n}\n\nexport default Converting;","import React from 'react';\nimport {convertLength, lengthValues} from '../../functions/lengthFunctions';\nimport Converting from '../Converting/Converting';\n\nconst Length: React.FC = () => {\n    return (<Converting units={lengthValues} convertingMethod={convertLength}/>)\n}\n\nexport default Length;","const fromKilograms = (type:string, value: string) => {\n    const kg = parseInt(value);\n    switch (type) {\n        case 'stones' :\n            return ((kg*0.1574).toFixed(2)).toString();\n        case 'pounds' :\n            return ((kg*2.2046).toFixed(2)).toString();\n        case 'grams':\n            return (kg*1000).toString();\n        default: return value;\n    }\n}\n\nconst fromGrams = (type:string, value: string) => {\n    const g = parseInt(value);\n    switch (type) {\n        case 'stones' :\n            return ((g*0.00015747).toFixed(4)).toString();\n        case 'pounds' :\n            return ((g*0.0022046).toFixed(4)).toString();\n        case 'kilograms':\n            return ((g/1000).toFixed(4)).toString();\n        default: return value;\n    }\n}\n\nconst fromPounds = (type:string, value: string) => {\n    const p = parseInt(value);\n    switch (type) {\n        case 'stones' :\n            return ((p*0.0071429).toFixed(4)).toString();\n        case 'grams' :\n            return ((p/0.0022046).toFixed(4)).toString();\n        case 'kilograms':\n            return ((p/2.2046).toFixed(2)).toString();\n        default: return value;\n    }\n}\n\nconst fromStones= (type:string, value: string) => {\n    const s = parseInt(value);\n    switch (type) {\n        case 'pounds' :\n            return (s*14).toString();\n        case 'grams' :\n            return ((s/0.00015747).toFixed(4)).toString();\n        case 'kilograms':\n            return ((s/0.15747).toFixed(2)).toString();\n        default: return value;\n    }\n}\n\nexport const convertWeight = (from: string, to: string, value: string) => {\n    switch (from) {\n        case 'kilograms' :\n            return fromKilograms(to, value);\n        case 'grams' :\n            return fromGrams(to, value);\n        case 'pounds' :\n            return fromPounds(to, value);\n        case 'stones' :\n            return fromStones(to, value);\n        default: return value;\n    }\n}\n\nexport const weightValues: string[] = ['kilograms', 'grams', 'pounds', 'stones' ];","import React from 'react';\nimport Converting from '../Converting/Converting';\nimport {weightValues, convertWeight} from '../../functions/weightFunctions'\n\nconst Weight: React.FC = () => {\n    return <Converting units={weightValues} convertingMethod={convertWeight} />\n}\n\nexport default Weight;","const fromFahrenheit = (type:string, value:string) => {\n    const f = parseInt(value);\n    switch (type) {\n        case 'celsius' :\n            return (((f-32)/1.8).toFixed(2)).toString();\n        case'kelvin':\n            return (((f-32)/1.8+273.15).toFixed(2)).toString();\n        default : return value;\n    }\n}\n\nconst fromKelvin = (type:string, value:string) => {\n    const k = parseInt(value);\n    switch (type) {\n        case 'celsius' :\n            return (k-273.15).toString();\n        case'fahrenheit':\n            return (((k-273.15)*1.8+32).toFixed(2)).toString();\n        default : return value;\n    }\n}\n\nconst fromCelsius = (type:string, value:string) => {\n    const c = parseInt(value);\n    switch (type) {\n        case 'kelvin' :\n            return (c+273.15).toString();\n        case'fahrenheit':\n            return ((c*1.8+32).toFixed(2)).toString();\n        default : return value;\n    }\n}\n\nexport const convertTemperature = (from: string, to: string, value: string) => {\n    switch (from) {\n        case 'fahrenheit' :\n            return fromFahrenheit(to, value);\n        case 'kelvin' :\n            return fromKelvin(to, value);\n        case 'celsius' :\n            return fromCelsius(to, value);\n        default: return value;\n    }\n}\n\nexport const temperatureValues: string[] = ['fahrenheit', 'kelvin', 'celsius' ];\n","import React from 'react';\nimport Converting from '../Converting/Converting';\nimport {temperatureValues, convertTemperature} from '../../functions/temperatureFunctions';\n\nconst Temperature: React.FC = () => {\n    return <Converting units={temperatureValues} convertingMethod={convertTemperature} />\n}\n\nexport default Temperature;","import React from 'react';\nimport './App.css';\nimport Menu from \"./components/Menu/Menu\";\nimport {Route, RouteObject, Routes, useRoutes} from 'react-router-dom';\nimport Length from './components/Length/Length';\nimport Weight from './components/Weight/Weight';\nimport Temperature from './components/Temperature/Temperature';\n\nfunction App() {\n  const routes: RouteObject[] = [{\n      path: '/',\n      element: <Menu />,\n      children: [\n          {path: '/length',\n          element: <Length/>\n          },\n          {path: '/weight',\n          element: <Weight/>\n          },\n          {path: '/temperature',\n              element: <Temperature/>\n          },\n      ]\n    }\n  ];\n\n  const element = useRoutes(routes);\n\n  return (\n    <div className=\"App\">\n        {element}\n        <Routes>\n            <Route path=\"/length\" element={<Length />}>Length</Route>\n            <Route path=\"/weight\" element={<Weight />}>Weight</Route>\n            <Route path=\"/temperature\" element={<Temperature/>}>Temperature</Route>\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}