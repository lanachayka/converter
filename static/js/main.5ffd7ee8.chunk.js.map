{"version":3,"sources":["components/Converting/Converting.module.css","components/Menu/Menu.module.css","components/DateField/DateField.module.css","components/MenuLink/MenuLink.module.css","components/DropDownList/DropDownList.module.css","components/MenuLink/MenuLink.tsx","components/Menu/Menu.tsx","components/DateField/DateField.tsx","components/DropDownList/DropDownList.tsx","components/Converting/Converting.tsx","functions/lengthFunctions.ts","functions/weightFunctions.ts","functions/temperatureFunctions.ts","App.tsx","index.tsx"],"names":["module","exports","MenuLink","props","onClick","setCurrentType","type","className","active","st","link","Menu","title","navigation","types","map","index","line","DateField","useState","Date","toLocaleTimeString","clock","setClock","useEffect","setInterval","clearInterval","wrapper","text","toLocaleDateString","undefined","weekday","year","month","day","DropDownList","select","onChange","event","onSelectChange","target","value","values","Converting","units","convertFrom","setConvertFrom","convertTo","setConvertTo","enteredValue","setEnteredValue","result","setResult","inputBlock","placeholder","input","equal","defaultValue","btn","convertingMethod","convertLength","from","to","m","parseInt","toString","toFixed","fromMeters","km","fromKilometer","f","fromFeet","y","fromYards","mi","fromMiles","lengthValues","convertWeight","kg","fromKilograms","g","fromGrams","p","fromPounds","s","fromStones","weightValues","convertTemperature","fromFahrenheit","k","fromKelvin","c","fromCelsius","temperatureValues","App","currentType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ffd7ee8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Converting_wrapper__1pTJj\",\"select\":\"Converting_select__3lp0Z\",\"inputBlock\":\"Converting_inputBlock__2kwPt\",\"input\":\"Converting_input__1e5FB\",\"equal\":\"Converting_equal__2Eed4\",\"btn\":\"Converting_btn__1nTIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Menu_title__3aHS-\",\"line\":\"Menu_line__2iazS\",\"navigation\":\"Menu_navigation__2ZEr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DateField_wrapper__3YQOS\",\"text\":\"DateField_text__1IdhJ\",\"clock\":\"DateField_clock__27CoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MenuLink_link__9mSRq\",\"active\":\"MenuLink_active__3AIbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"DropDownList_select__3fLOA\"};"," import React from 'react';\r\n import st from './MenuLink.module.css';\r\n\r\ninterface MenuLinkProps {\r\n    type: string;\r\n    setCurrentType: (type: string)=>void;\r\n    active: string;\r\n}\r\n\r\nconst MenuLink: React.FC<MenuLinkProps> = (props) => {\r\n    return <button\r\n            onClick={()=> props.setCurrentType(props.type)}\r\n            className={props.active===props.type ? st.active : st.link}>{props.type}\r\n           </button>\r\n}\r\n\r\nexport default MenuLink;","import React from 'react';\r\nimport st from './Menu.module.css'\r\nimport MenuLink from \"../MenuLink/MenuLink\";\r\n\r\ninterface MenuProps {\r\n    types: string[];\r\n    setCurrentType: (type: string)=>void;\r\n    active: string;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = (props) => {\r\n    return (\r\n        <div>\r\n            <h1 className={st.title}>Choose what you want to convert:</h1>\r\n            <div className={st.navigation}>\r\n                {props.types.map((type, index) =>\r\n                   <MenuLink key={index} type={type} setCurrentType={props.setCurrentType} active={props.active}/>\r\n                )}\r\n            </div>\r\n            <hr className={st.line}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, {useEffect, useState} from 'react';\r\nimport st from './DateField.module.css'\r\n\r\nconst DateField:React.FC = () => {\r\n    const [clock, setClock] = useState<string>(new Date().toLocaleTimeString());\r\n\r\n    useEffect(()=> {\r\n        const clock = setInterval(\r\n            ():void => setClock(new Date().toLocaleTimeString()),\r\n            1000\r\n        );\r\n        return ()=> {\r\n            clearInterval(clock);\r\n        }\r\n    }, []);\r\n\r\n    return <div className={st.wrapper}>\r\n        <p className={st.text}>{new Date().toLocaleDateString(undefined, {\r\n            weekday: \"long\",\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n        })}</p>\r\n        <span className={st.clock}>{clock}</span>\r\n    </div>\r\n}\r\n\r\nexport default DateField","import React from \"react\";\r\nimport st from \"./DropDownList.module.css\"\r\n\r\ninterface DropDownListProps {\r\n    values: string[];\r\n    onSelectChange: (value: string) => void;\r\n}\r\n\r\nconst DropDownList: React.FC<DropDownListProps> = (props) => {\r\n\r\n    const changeValue = (event: React.ChangeEvent<HTMLSelectElement>):void => {\r\n        props.onSelectChange(event.target.value);\r\n    }\r\n    return <select className={st.select} onChange={changeValue}>\r\n        {props.values.map((value, index)=>(\r\n            <option key={index} value={value}>{value}</option>))}\r\n    </select>\r\n}\r\n\r\nexport default DropDownList;","import React, {useState} from 'react';\r\nimport st from './Converting.module.css'\r\nimport DropDownList from '../DropDownList/DropDownList'\r\n\r\ninterface ConvertingProps {\r\n    units: string[];\r\n    convertingMethod: (from:string, to:string, value:string)=>string;\r\n}\r\n\r\nconst Converting: React.FC<ConvertingProps> = (props) => {\r\n\r\n    const [convertFrom, setConvertFrom] = useState<string>(props.units[0]);\r\n    const [convertTo, setConvertTo] = useState<string>(props.units[0]);\r\n    const [enteredValue, setEnteredValue] = useState<string>('');\r\n    const [result, setResult] = useState<string>('');\r\n\r\n    const convert = ():void => {\r\n        setResult(props.convertingMethod(convertFrom, convertTo, enteredValue));\r\n    }\r\n\r\n    const onInputChange = (event:React.ChangeEvent<HTMLInputElement>):void => {\r\n        setEnteredValue(event.target.value);\r\n    }\r\n\r\n    return (<div className={st.wrapper}>\r\n            <div className={st.select}>\r\n                <div className={st.inputBlock}>\r\n                    <input placeholder=\"Enter a value\" className={st.input} onChange={onInputChange}/>\r\n                    <DropDownList onSelectChange={setConvertFrom} values={props.units}/>\r\n                </div>\r\n                <p className={st.equal}>=</p>\r\n                <div className={st.inputBlock}>\r\n                    <input className={st.input} defaultValue={result} />\r\n                    <DropDownList onSelectChange={setConvertTo} values={props.units}/>\r\n                </div>\r\n            </div>\r\n            <button className={st.btn} onClick={convert}>Сonvert</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Converting;","const fromMeters = (type:string, value:string):string => {\r\n    const m = parseInt(value);\r\n    switch (type) {\r\n        case 'kilometer' :\r\n            return (m/1000).toString();\r\n        case 'feet' :\r\n            return ((m*3.2808).toFixed(2)).toString();\r\n        case 'yards':\r\n            return ((m*1.0936)).toFixed(2).toString();\r\n        case 'miles' :\r\n            return ((m*0.00062137).toFixed(4)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromKilometer = (type:string, value: string):string => {\r\n    const km = parseInt(value);\r\n    switch (type) {\r\n        case 'meter' :\r\n            return (km*1000).toString();\r\n        case 'feet' :\r\n            return ((km*3280.8).toFixed(2)).toString();\r\n        case 'yards':\r\n            return ((km*1093.6)).toFixed(2).toString();\r\n        case 'miles' :\r\n            return ((km*0.62137).toFixed(2)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromFeet = (type:string, value: string):string => {\r\n    const f = parseInt(value);\r\n    switch (type) {\r\n        case 'meters' :\r\n            return ((f/3.2808).toFixed(2)).toString();\r\n        case 'kilometer' :\r\n            return ((f/3280.8).toFixed(4)).toString();\r\n        case 'yards':\r\n            return ((f*0.33333)).toFixed(2).toString();\r\n        case 'miles' :\r\n            return ((f*0.00018939).toFixed(4)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromYards = (type:string, value: string):string => {\r\n    const y = parseInt(value);\r\n    switch (type) {\r\n        case 'meters' :\r\n            return ((y/1.0936).toFixed(2)).toString();\r\n        case 'kilometer' :\r\n            return ((y/1093.6).toFixed(4)).toString();\r\n        case 'feet':\r\n            return (y*3).toString();\r\n        case 'miles' :\r\n            return ((y*0.00056818).toFixed(4)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromMiles = (type:string, value: string):string => {\r\n    const mi = parseInt(value);\r\n    switch (type) {\r\n        case 'meters' :\r\n            return ((mi/0.00062137).toFixed(4)).toString();\r\n        case 'kilometer' :\r\n            return ((mi/0.62137).toFixed(4)).toString();\r\n        case 'feet':\r\n            return (mi*5280).toString();\r\n        case 'yards' :\r\n            return (mi*1760).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nexport const convertLength = (from: string, to: string, value: string):string => {\r\n    switch (from) {\r\n        case 'meters' :\r\n            return fromMeters(to, value);\r\n        case 'kilometer' :\r\n            return fromKilometer(to, value);\r\n        case 'feet' :\r\n            return fromFeet(to, value);\r\n        case 'yards' :\r\n            return fromYards(to, value);\r\n        case 'miles' :\r\n            return fromMiles(to, value);\r\n        default: return value;\r\n    }\r\n}\r\n\r\n\r\nexport const lengthValues: string[] = ['meters', 'kilometer', 'feet', 'yards', 'miles' ];","const fromKilograms = (type:string, value: string):string => {\r\n    const kg = parseInt(value);\r\n    switch (type) {\r\n        case 'stones' :\r\n            return ((kg*0.1574).toFixed(2)).toString();\r\n        case 'pounds' :\r\n            return ((kg*2.2046).toFixed(2)).toString();\r\n        case 'grams':\r\n            return (kg*1000).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromGrams = (type:string, value: string):string => {\r\n    const g = parseInt(value);\r\n    switch (type) {\r\n        case 'stones' :\r\n            return ((g*0.00015747).toFixed(4)).toString();\r\n        case 'pounds' :\r\n            return ((g*0.0022046).toFixed(4)).toString();\r\n        case 'kilograms':\r\n            return ((g/1000).toFixed(4)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromPounds = (type:string, value: string):string => {\r\n    const p = parseInt(value);\r\n    switch (type) {\r\n        case 'stones' :\r\n            return ((p*0.0071429).toFixed(4)).toString();\r\n        case 'grams' :\r\n            return ((p/0.0022046).toFixed(4)).toString();\r\n        case 'kilograms':\r\n            return ((p/2.2046).toFixed(2)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nconst fromStones= (type:string, value: string):string => {\r\n    const s = parseInt(value);\r\n    switch (type) {\r\n        case 'pounds' :\r\n            return (s*14).toString();\r\n        case 'grams' :\r\n            return ((s/0.00015747).toFixed(4)).toString();\r\n        case 'kilograms':\r\n            return ((s/0.15747).toFixed(2)).toString();\r\n        default: return value;\r\n    }\r\n}\r\n\r\nexport const convertWeight = (from: string, to: string, value: string):string => {\r\n    switch (from) {\r\n        case 'kilograms' :\r\n            return fromKilograms(to, value);\r\n        case 'grams' :\r\n            return fromGrams(to, value);\r\n        case 'pounds' :\r\n            return fromPounds(to, value);\r\n        case 'stones' :\r\n            return fromStones(to, value);\r\n        default: return value;\r\n    }\r\n}\r\n\r\nexport const weightValues: string[] = ['kilograms', 'grams', 'pounds', 'stones' ];","const fromFahrenheit = (type:string, value:string):string => {\r\n    const f = parseInt(value);\r\n    switch (type) {\r\n        case 'celsius' :\r\n            return (((f-32)/1.8).toFixed(2)).toString();\r\n        case'kelvin':\r\n            return (((f-32)/1.8+273.15).toFixed(2)).toString();\r\n        default : return value;\r\n    }\r\n}\r\n\r\nconst fromKelvin = (type:string, value:string):string => {\r\n    const k = parseInt(value);\r\n    switch (type) {\r\n        case 'celsius' :\r\n            return ((k-273.15).toFixed(2)).toString();\r\n        case'fahrenheit':\r\n            return (((k-273.15)*1.8+32).toFixed(2)).toString();\r\n        default : return value;\r\n    }\r\n}\r\n\r\nconst fromCelsius = (type:string, value:string):string => {\r\n    const c = parseInt(value);\r\n    switch (type) {\r\n        case 'kelvin' :\r\n            return ((c+273.15).toFixed(2)).toString();\r\n        case'fahrenheit':\r\n            return ((c*1.8+32).toFixed(2)).toString();\r\n        default : return value;\r\n    }\r\n}\r\n\r\nexport const convertTemperature = (from: string, to: string, value: string):string => {\r\n    switch (from) {\r\n        case 'fahrenheit' :\r\n            return fromFahrenheit(to, value);\r\n        case 'kelvin' :\r\n            return fromKelvin(to, value);\r\n        case 'celsius' :\r\n            return fromCelsius(to, value);\r\n        default: return value;\r\n    }\r\n}\r\n\r\nexport const temperatureValues: string[] = ['fahrenheit', 'kelvin', 'celsius' ];\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Menu from \"./components/Menu/Menu\";\r\nimport DateField from \"./components/DateField/DateField\";\r\nimport Converting from \"./components/Converting/Converting\";\r\nimport {convertLength, lengthValues} from \"./functions/lengthFunctions\";\r\nimport {convertWeight, weightValues} from \"./functions/weightFunctions\";\r\nimport {convertTemperature, temperatureValues} from \"./functions/temperatureFunctions\";\r\n\r\nconst App:React.FC = () => {\r\n\r\n  const types = ['length', 'weight', 'temperature'];\r\n  const [currentType, setCurrentType] = useState<string>('length');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n            <DateField />\r\n            <Menu types={types} setCurrentType={setCurrentType} active={currentType}/>\r\n            <Converting units={currentType === 'length'\r\n                            ? lengthValues : currentType ==='weight'\r\n                            ? weightValues : temperatureValues}\r\n                        convertingMethod={currentType === 'length'\r\n                            ? convertLength : currentType ==='weight'\r\n                            ? convertWeight : convertTemperature}\r\n            />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}